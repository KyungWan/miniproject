{"remainingRequest":"/home/bitai/sw/Lecture/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bitai/sw/Lecture/frontend/src/components/BoardListPageForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bitai/sw/Lecture/frontend/src/components/BoardListPageForm.vue","mtime":1600419892898},{"path":"/home/bitai/sw/Lecture/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bitai/sw/Lecture/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bitai/sw/Lecture/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bitai/sw/Lecture/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVnVldGlmeUxpc3RQYWdlRm9ybScsCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBwYWdlTnVtOiAwCiAgICB9CiAgfSwKICBwcm9wczogewogICAgbGlzdEFycmF5OiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHBhZ2VTaXplOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIGRlZmF1bHQ6IDUKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG5leHRQYWdlICgpIHsKICAgICAgdGhpcy5wYWdlTnVtICs9IDEKICAgIH0sCiAgICBwcmV2UGFnZSAoKSB7CiAgICAgIHRoaXMucGFnZU51bSAtPSAxCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgcGFnZUNvdW50ICgpIHsKICAgICAgY29uc3QgbGlzdExlbiA9IHRoaXMubGlzdEFycmF5Lmxlbmd0aAogICAgICBjb25zdCBsaXN0U2l6ZSA9IHRoaXMucGFnZVNpemUKCiAgICAgIGxldCBwYWdlID0gTWF0aC5mbG9vcihsaXN0TGVuIC8gbGlzdFNpemUpCiAgICAgIGlmIChsaXN0TGVuICUgbGlzdFNpemUgPiAwKSB7CiAgICAgICAgcGFnZSArPSAxCiAgICAgIH0KCiAgICAgIHJldHVybiBwYWdlCiAgICB9LAogICAgcGFnaW5hdGVkRGF0YSAoKSB7CiAgICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy5wYWdlTnVtICogdGhpcy5wYWdlU2l6ZQogICAgICBjb25zdCBlbmQgPSBzdGFydCArIHRoaXMucGFnZVNpemUKICAgICAgcmV0dXJuIHRoaXMubGlzdEFycmF5LnNsaWNlKHN0YXJ0LCBlbmQpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["BoardListPageForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BoardListPageForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h3>Board List View</h3>\n    <table border=\"1\">\n      <tr>\n        <th align=\"center\" width=\"80\">No</th>\n        <th align=\"center\" width=\"320\">Title</th>\n        <th align=\"center\" width=\"100\">Writer</th>\n        <th align=\"center\" width=\"180\">Registration Date</th>\n      </tr>\n      <tr v-for=\"page in paginatedData\" :key=\"page.boardNo\">\n        <td>{{ page.boardNo }}</td>\n        <td>{{ page.title }}</td>\n        <td>{{ page.writer }}</td>\n        <td>{{ page.regDate }}</td>\n      </tr>\n    </table>\n    <div class=\"btn-cover\">\n      <button :disabled=\"pageNum === 0\"\n        @click=\"prevPage\" class=\"page-btn\">\n        이전\n      </button>\n      <span class=\"page-count\">{{ pageNum + 1 }} / {{ pageCount }} 페이지</span>\n      <button :disabled=\"pageNum >= pageCount - 1\"\n        @click=\"nextPage\" class=\"page-btn\">\n        다음\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'VuetifyListPageForm',\n  data () {\n    return {\n      pageNum: 0\n    }\n  },\n  props: {\n    listArray: {\n      type: Array,\n      required: true\n    },\n    pageSize: {\n      type: Number,\n      required: true,\n      default: 5\n    }\n  },\n  methods: {\n    nextPage () {\n      this.pageNum += 1\n    },\n    prevPage () {\n      this.pageNum -= 1\n    }\n  },\n  computed: {\n    pageCount () {\n      const listLen = this.listArray.length\n      const listSize = this.pageSize\n\n      let page = Math.floor(listLen / listSize)\n      if (listLen % listSize > 0) {\n        page += 1\n      }\n\n      return page\n    },\n    paginatedData () {\n      const start = this.pageNum * this.pageSize\n      const end = start + this.pageSize\n      return this.listArray.slice(start, end)\n    }\n  }\n}\n</script>\n"]}]}