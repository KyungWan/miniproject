{"remainingRequest":"/home/bitai/sw/Lecture/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bitai/sw/Lecture/frontend/src/views/CrawlCategory.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/bitai/sw/Lecture/frontend/src/views/CrawlCategory.vue","mtime":1600672581801},{"path":"/home/bitai/sw/Lecture/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bitai/sw/Lecture/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/bitai/sw/Lecture/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/bitai/sw/Lecture/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bitai/sw/Lecture/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKYm9keSB7CiAgZm9udC1mYW1pbHk6IEhlbHZldGljYSBOZXVlLCBBcmlhbCwgc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHg7CiAgY29sb3I6ICM0NDQ7Cn0KCnRhYmxlIHsKICBib3JkZXI6IDJweCBzb2xpZCAjNDJiOTgzOwogIGJvcmRlci1yYWRpdXM6IDNweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwp9Cgp0aCB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzQyYjk4MzsKICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjY2KTsKICBjdXJzb3I6IHBvaW50ZXI7CiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsKICAtbW96LXVzZXItc2VsZWN0OiBub25lOwogIC11c2VyLXNlbGVjdDogbm9uZTsKfQoKdGQgewogIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7Cn0KCnRoLAp0ZCB7CiAgbWluLXdpZHRoOiAxMjBweDsKICBwYWRkaW5nOiAxMHB4IDIwcHg7Cn0KCiNzZWFyY2ggewogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0K"},{"version":3,"sources":["CrawlCategory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"CrawlCategory.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <Layout>\n    <template #menubar>\n    <!-- 메뉴[툴바] -->\n      <v-btn @click=\"start('domestic')\" text color=\"black\" style=\"padding: 10px; width: 90px;\">국내</v-btn>\n\n      <v-btn @click=\"start('global')\" text color=\"black\" style=\"padding: 10px; width: 90px;\">해외</v-btn>\n\n      <v-btn @click=\"start('news#economy')\" text color=\"black\" style=\"padding: 10px; width: 90px;\">뉴스</v-btn>\n\n      <v-btn @click=\"start('exchange')\" text color=\"black\" style=\"padding: 10px; width: 90px;\">환율</v-btn>\n\n    </template>\n    <template #content>\n    <!-- 게시판 -->\n      <v-simple-table>\n        <template v-slot:default>\n          <thead>\n            <tr>\n            <!-- 목록 -->\n              <th class=\"text-left\">No.</th>\n              <th class=\"text-left\">제목</th>\n            </tr>\n          </thead>\n          <!-- 크롤링 한 값을 가져옴 [클릭할 때 작동] -->\n          <tbody>\n            <tr v-for=\"list of lists\" :key=\"list.title\">\n              <td style=\"color: gray\">{{ list.newsNo }}</td>\n              <td><a @click=\"clickNews(list.newsNo)\">{{ list.title }}</a></td>\n            </tr>\n            <div class=\"card text-center m-3\">\n              <div class=\"card-footer pb-0 pt-3\">\n                <jw-pagination :items=\"exampleItems\" @changePage=\"onChangePage\"></jw-pagination>\n              </div>\n            </div>\n          </tbody>\n        </template>\n      </v-simple-table>\n    </template>\n  </Layout>\n</template>\n\n<!--\n<div class=\"card text-center m-3\">\n  <div class=\"card-body\">\n    <div v-for=\"item in pageOfItems\" :key=\"item.id\">{{item.name}}</div>\n  </div>\n <div class=\"card-footer pb-0 pt-3\">\n   <jw-pagination :items=\"exampleItems\" @changePage=\"onChangePage\"></jw-pagination>\n </div>\n</div>\n-->\n\n<script>\nimport Layout from '../components/Layout'\nimport { mapState } from 'vuex'\n\n// an example array of items to be paged\nconst exampleItems = [...Array(150).keys()].map(i => ({ id: (i + 1), name: 'Item ' + (i + 1) }))\n\nexport default {\n  components: { Layout },\n  computed: {\n    ...mapState({\n      lists: state => state.lists\n    })\n  },\n  methods: {\n    clickNews (newsNo) {\n      console.log('clickNews: ' + newsNo)\n      this.$store.dispatch('crawlFindOne', newsNo)\n    },\n    start (category) {\n      this.$store.dispatch('crawlFind', category)\n    },\n    onChangePage (pageOfItems) {\n      // update page of items\n      this.pageOfItems = pageOfItems\n    }\n  },\n  data () {\n    return {\n      exampleItems,\n      pageOfItems: []\n    }\n  }\n}\n</script>\n\n<style>\nbody {\n  font-family: Helvetica Neue, Arial, sans-serif;\n  font-size: 14px;\n  color: #444;\n}\n\ntable {\n  border: 2px solid #42b983;\n  border-radius: 3px;\n  background-color: #fff;\n}\n\nth {\n  background-color: #42b983;\n  color: rgba(255, 255, 255, 0.66);\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -user-select: none;\n}\n\ntd {\n  background-color: #f9f9f9;\n}\n\nth,\ntd {\n  min-width: 120px;\n  padding: 10px 20px;\n}\n\n#search {\n  margin-bottom: 10px;\n}\n</style>\n"]}]}