 <!-- 크롤링 한 값을 가져옴 [클릭할 때 작동] -->
  <tr v-for="list of lists" :key="list.title">
    <td style="color: gray">{{ list.newsNo }}</td>
    <td><a @click="clickNews(list.newsNo)">{{ list.title }}</a></td>
  </tr>


// an example array of items to be paged
const exampleItems = [...Array(150).keys()].map(i => ({ id: (i + 1), name: 'Item ' + (i + 1) }))

  data () {
    return {
      exampleItems,
      pageOfItems: []
    }
  }

<!-- 검색창 ----------------------------------------
<div class="row" style="clear:right;width:500px;margin:auto">
  <div class="col-lg-12">
    <form id="searchForm" action="Stock" method="get">
      <select name="type">
        <option value="">전체보기</option>
        <option value="T">제목</option>
        <option value="C">내용</option>
        <option value="TC">제목과 내용</option>
      </select>
      <input type="text" name="keyword" placeholder="검색" />
      <input type="hidden" name="pageNum" placeholder="pageNum">
      <input type="hidden" name="amount" placeholder="amount">
      <button class="btn btn-primary btn-sm"><p style="border-style: groove">Search</p></button>
    </form>
  </div>
</div>
!-- 검색창 ---------------------------------------->


<!-- pagination ----------------------------------------
<div class="card text-center m-3">
  <div class="card-footer pb-0 pt-3">
    <jw-pagination :items="exampleItems" @changePage="onChangePage"></jw-pagination>
  </div>
</div>            -->


<!--
<div class="card text-center m-3">
  <div class="card-body">
    <div v-for="item in pageOfItems" :key="item.id">{{item.name}}</div>
  </div>
 <div class="card-footer pb-0 pt-3">
   <jw-pagination :items="exampleItems" @changePage="onChangePage"></jw-pagination>
 </div>
</div>
-->

onChangePage (pageOfItems) {
  // update page of items
  this.pageOfItems = pageOfItems
}

----------------------------------------------------------------------------

<template>
  <div class="home">
    <!-- <img alt="Vue logo" src="../assets/logo.png"> -->
    <div id="header" v-if="isAuthorized">
      <v-container fluid>
        <v-img src="@/assets/homeG.png" max-height="700px"></v-img>
      <!-- 로그인 후 화면 -->
        <router-link :to="{ name: 'Home' }" class="nav-link" active-class="active">
          대기 화면
        </router-link>
        <router-link :to="{ name: 'Stock' }" class="nav-link" active-class="active" style="padding: 40px;">
          정보 게시판
        </router-link>
        <button id="login" @click="onClickLogout">Logout</button>
      </v-container>
      <div>
        <br><span>{{ myinfo.auth }}님 접속을 환영합니다.</span>
      </div>
    </div>
    <!-- 로그인 전 화면  -->
    <div id="header" v-else>
      <v-container fluid>
        <v-img src="@/assets/C.png" max-height="400px"></v-img>
      <button id="login" @click="$router.push('AdminSetupPage')">
        회원가입
      </button><br><br>
      <button id="login" @click="$router.push('LoginPage')">
        로그인
      </button>
      <router-link :to="{ name: 'Home' }" class="nav-link" active-class="active">
        대기 화면
      </router-link><br>
      </v-container>
    </div>
  </div>
</template>

<script>
// @ is an alias to /src
/* eslint-disable no-unused-vars */
import store from '../store'
import Vue from 'vue'
// import cookies from 'vue-cookies'

import { mapState, mapGetters, mapActions } from 'vuex'

// Vue.use(cookies)

export default {
  name: 'Home',
  data: function () {
    return {
      message: 'Vue Test Message'
    }
  },
  methods: {
    onClickLogout () {
      this.logout()
      alert('Success Logout')
      this.$router.push({ name: 'Home' })
    },
    ...mapActions(['logout'])
  },
  computed: {
    ...mapState(['myinfo']),
    ...mapGetters(['isAuthorized'])
  },
  components: {
  }
}
</script>

<style scoped>
div {
  border: 1px solid #ccc;
}

#header {
  //padding: 15px;
  //margin-bottom: 15px;
  //margin: 5px 5px;
}

img {
  width: auto;
  height: auto;
  max-width: 1000px;
  max-height: 350px;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

#login {
  background-color: #77aadd;
  color: #ffffff;
  font-weight: bold;
  float: right;
}

</style>

----------------------------------------------------------------------------

<template>
  <Layout>
    <template #menubar>
    <!-- 메뉴[툴바] -->
      <v-btn @click="start('economic')" text color="black" style="padding: 10px; width: 90px;">국내 경제</v-btn>

      <v-btn @click="start('foreign')" text color="black" style="padding: 10px; width: 90px;">해외 소식</v-btn>

      <!-- <v-btn @click="start('news#economy')" text color="black" style="padding: 10px; width: 90px;">뉴스</v-btn>

      <v-btn @click="start('exchange')" text color="black" style="padding: 10px; width: 90px;">환율</v-btn> -->

    </template>
    <template #content>
    <!-- 게시판 -->
    <v-container>
      <v-text-field v-model="search" placeholder="search" single-line></v-text-field>
        <v-data-table style="width: auto"
                      :headers="headers"
                      :items="lists"
                      :items-per-page="5"
                      :search="search">
         <template #item.title="{ item }">
            <a :href="item.address" target=_blank>{{ item.title }}</a>
         </template>
        </v-data-table>
      </v-container>
    </template>
  </Layout>
</template>

<script>
import Layout from '../components/Layout'
import { mapState } from 'vuex'

export default {
  name: 'App',
  data: () => ({
    search: '',
    headers: [
      { text: 'No.', value: 'newsNo' },
      { text: '제목', value: 'title' }
    ]
  }),
  components: { Layout },
  computed: {
    ...mapState({
      lists: state => state.lists
    })
  },
  methods: {
    clickNews (newsNo) {
      console.log('clickNews: ' + newsNo)
      this.$store.dispatch('crawlFindOne', newsNo)
    },
    start (category) {
      this.$store.dispatch('crawlFind', category)
    }
  }
}
</script>

<style>
  .border-styles > p{
    margin: 2px 0;
    padding: 1px 3px;
    border-width: 2px;
    border-color: #aaa;
  }
  body {
    font-family: Helvetica Neue, Arial, sans-serif;
    font-size: 14px;
    color: #444;
  }

  table {
    border: 2px solid #42b983;
    border-radius: 3px;
    background-color: #fff;
  }

  th {
    background-color: #42b983;
    color: rgba(255, 255, 255, 0.66);
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -user-select: none;
  }

  td {
    background-color: #f9f9f9;
  }

  th,
  td {
    min-width: 120px;
    padding: 10px 20px;
  }

  #search {
    margin-bottom: 10px;
  }
</style>

------------------------------------------------------------------------------------------

<template>
  <v-app id="inspire">
    <v-app-bar
      app
      clipped-right
      color="blue"
      dark
    >
    <!-- 타이틀 -->
      <v-app-bar-nav-icon @click.stop="drawer = !drawer"></v-app-bar-nav-icon>
      <v-toolbar-title><div @click="home">음악 추천</div></v-toolbar-title>
      <v-spacer></v-spacer>
      <slot name="menubar"></slot>
    </v-app-bar>
    <v-navigation-drawer
      v-model="drawer"
      app
    >
      <v-list dense>
      <!-- 리스트 목록  -->
        <v-list-item @click.stop="left = !left">
          <v-list-item-action>
            <v-icon>mdi-exit-to-app</v-icon>
          </v-list-item-action>
          <v-list-item-content>
            <v-list-item-title @click="home">홈으로 이동</v-list-item-title>
          </v-list-item-content>
        </v-list-item>
      </v-list>
    </v-navigation-drawer>

    <v-container>
      <v-main id="content">
        <slot name="content" class="font">
        </slot>
      </v-main>
    </v-container>

    <v-footer
      app
      color=green
      class="white--text"
    >
      <v-spacer></v-spacer>
      <!-- 아래 쪽 글씨 부분 -->
      <span></span>
    </v-footer>
  </v-app>
</template>

<script>
import router from '../router'

export default {
  data: () => ({
    drawer: false,
    left: false
  }),
  methods: {
  // (리스트) 홈으로 이동 등등...
    home () {
      (window.location.pathname !== '/') ? router.push('/') : router.go(0)
    },
    category () {
      (window.location.pathname !== '/Stock') ? router.push('/Stock') : router.go(0)
    },
    // recommend (추천 하는 창 만들기)
    recommend () {
      (window.location.pathname !== '/recommend/list') ? router.push('/recommend/list') : router.go(0)
    }
  }
}
</script>
